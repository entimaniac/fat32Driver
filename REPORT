Project 3 Report

============================
Problem statement:
============================
For this project, you will design and implement a simple, user-space, shell-like
utility that is capable of interpreting a FAT32 file system image. The program
must understand the basic commands to manipulate the given file system image. 
The utility must not corrupt the file system image and should be robust. You may
not reuse kernel file system code, and you may not copy code from other file
system utilities (or from anywhere else over the internet, to be precise).

============================
Steps taken to solve problem
============================
James began work on the project almost immediately. He then caught the rest of
group up to what he had accomplished. He explained what functions needed to be
completed and ideas for accomplishing them. The remaining members were then able
contribute to the project and wrap up the remaining work.

============================
Assumptions
============================
- ls does not require a no parameter case
- 67MB for the image is adequate for testing and submission


============================
System Calls
============================
- Program takes place in userspace, no direct system calls used.

============================
Problems
============================
- The Thanksgiving holiday occured near the end of the project, during the time
when the work was most underway, leading to poor communication and busy holiday 
plans.
- There were issues for members such as Jesse, who had to adapt to developing in
a new way. His normal xcode development routine didn't easily allow for some 
keywords to be overloaded.


============================
Known Bugs
============================
- Some commands (exit) require either an extra space or two 'enters' 
before executing.
- 


============================
Division of Labor
============================
James:
Tested code;
Worked in:
	p3.c;
	open.h;
	ls.h;
	read.h
	util.h
	util.c
	vector.c
	vector.h

Stefan:
Tested code;
Worked in:
	size.h
	util.c
	write.h
	makefile
	
Jesse:
Tested code;
Created and maintained documentation;
Worked in:
	util.h
	util.c - code to prevent segmentation faults;


============================
Slack Day Used
============================
-tbd


============================
Log
============================
Sun, November 29: 
	Stefan finishes size function; begins write functionality. 
	Jesse shares documentation; adds code to prevent segmentation faults to util.c.

Sat, November 28: 
	James adds read functionality and fixes bugs.
	Jesse creates documentation.

Fri, November 27: 
	Stefan creates makefile; begins working on size function.

Wed, November 25: 
	James adds cd functionality.

Tue, November 24: 
	James corrects some functions.

Fri, November 20: 
	James adds more base functionality.

Wed, November 18: 
	James pushes initial git commit on github.

Mon, November 2: 
	James begins work on project.

Fri, October 30: 
	Project 3 assigned.
